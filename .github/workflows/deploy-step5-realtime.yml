name: Deploy Step 5 - Real-Time Game Features

on:
  workflow_dispatch:
    inputs:
      deploy_type:
        description: 'Deployment type'
        required: false
        default: 'realtime'
        type: choice
        options:
          - realtime
          - force
  push:
    branches: [ main ]
    paths:
      - 'server-realtime-step5.js'
      - 'Dockerfile.step5-websocket'
      - '.github/workflows/deploy-step5-realtime.yml'

env:
  PROJECT_ID: direct-glider-465821-p7
  REGION: us-central1
  SERVICE_NAME: realm-rivalry-realtime
  REPOSITORY: realm-rivalry
  IMAGE_NAME: us-central1-docker.pkg.dev/direct-glider-465821-p7/realm-rivalry/realtime

jobs:
  deploy-realtime:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Authenticate to Google Cloud
        uses: google-github-actions/auth@v2
        with:
          credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

      - name: Set up Cloud SDK
        uses: google-github-actions/setup-gcloud@v2

      - name: Configure Docker
        run: gcloud auth configure-docker us-central1-docker.pkg.dev

      - name: Build and Push Docker Image
        run: |
          docker build -f Dockerfile.step5-websocket -t ${{ env.IMAGE_NAME }}:latest .
          docker push ${{ env.IMAGE_NAME }}:latest

      - name: Deploy to Cloud Run
        run: |
          gcloud run deploy ${{ env.SERVICE_NAME }} \
            --image ${{ env.IMAGE_NAME }}:latest \
            --region ${{ env.REGION }} \
            --platform managed \
            --allow-unauthenticated \
            --set-env-vars="NODE_ENV=production" \
            --set-env-vars="DATABASE_URL=${{ secrets.DATABASE_URL }}" \
            --set-env-vars="GOOGLE_SERVICE_ACCOUNT_KEY=${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}" \
            --memory 1Gi \
            --cpu 1 \
            --min-instances 1 \
            --max-instances 3 \
            --timeout 60 \
            --concurrency 100

      - name: Verify Deployment
        run: |
          SERVICE_URL=$(gcloud run services describe ${{ env.SERVICE_NAME }} --region ${{ env.REGION }} --format 'value(status.url)')
          echo "üöÄ Step 5 Real-Time Game Features deployed to: $SERVICE_URL"
          echo "üéÆ WebSocket endpoint: $SERVICE_URL/ws"
          echo "üè• Health check: $SERVICE_URL/health"