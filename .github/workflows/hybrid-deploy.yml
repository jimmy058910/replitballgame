name: Hybrid Deployment - Firebase + Cloud Run

on:
  push:
    branches: [ main ]
  workflow_dispatch:

env:
  PROJECT_ID: direct-glider-465821-p7
  REGION: us-east5
  BACKEND_SERVICE: realm-rivalry-backend
  BACKEND_IMAGE: us-east5-docker.pkg.dev/direct-glider-465821-p7/realm-rivalry/backend

jobs:
  deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install dependencies
      run: npm ci

    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v2
      with:
        credentials_json: ${{ secrets.GOOGLE_SERVICE_ACCOUNT_KEY }}

    - name: Set up Cloud SDK
      uses: google-github-actions/setup-gcloud@v2

    - name: Configure Docker authentication
      run: gcloud auth configure-docker us-east5-docker.pkg.dev

    # Deploy Backend to Cloud Run
    - name: Build backend Docker image
      run: |
        docker build -f Dockerfile.backend -t ${{ env.BACKEND_IMAGE }}:latest .

    - name: Push backend image to Artifact Registry
      run: |
        docker push ${{ env.BACKEND_IMAGE }}:latest

    - name: Deploy backend to Cloud Run
      run: |
        gcloud run deploy ${{ env.BACKEND_SERVICE }} \
          --image ${{ env.BACKEND_IMAGE }}:latest \
          --platform managed \
          --region ${{ env.REGION }} \
          --allow-unauthenticated \
          --service-account realm-rivalry-runner@${{ env.PROJECT_ID }}.iam.gserviceaccount.com \
          --set-env-vars NODE_ENV=production \
          --set-secrets DATABASE_URL=database-url:latest,SESSION_SECRET=session-secret:latest,GOOGLE_CLIENT_SECRET=google-client-secret:latest \
          --memory 2Gi \
          --cpu 1 \
          --concurrency 80 \
          --max-instances 10 \
          --port 8080 \
          --timeout 300s

    - name: Get backend URL
      id: backend-url
      run: |
        BACKEND_URL=$(gcloud run services describe ${{ env.BACKEND_SERVICE }} --region=${{ env.REGION }} --format="value(status.url)")
        echo "url=$BACKEND_URL" >> $GITHUB_OUTPUT
        echo "Backend URL: $BACKEND_URL"

    # Deploy Frontend to Firebase
    - name: Build frontend with backend URL
      run: |
        VITE_API_BASE_URL=${{ steps.backend-url.outputs.url }} npm run build
      env:
        VITE_FIREBASE_API_KEY: ${{ secrets.VITE_FIREBASE_API_KEY }}
        VITE_FIREBASE_PROJECT_ID: ${{ secrets.VITE_FIREBASE_PROJECT_ID }}
        VITE_FIREBASE_APP_ID: ${{ secrets.VITE_FIREBASE_APP_ID }}

    - name: Install Firebase CLI
      run: npm install -g firebase-tools

    - name: Deploy to Firebase
      run: |
        firebase deploy --project ${{ env.PROJECT_ID }}

    # Test deployment
    - name: Test deployment
      run: |
        echo "Testing hybrid deployment..."
        echo "Frontend: $(curl -s -o /dev/null -w "%{http_code}" https://realmrivalry.com)"
        echo "Backend Health: $(curl -s -o /dev/null -w "%{http_code}" ${{ steps.backend-url.outputs.url }}/health)"

    - name: Deployment summary
      run: |
        echo "üéâ Hybrid deployment complete!"
        echo "üåê Frontend: https://realmrivalry.com"
        echo "üîß Backend APIs: ${{ steps.backend-url.outputs.url }}"
        echo "üíæ Database: Neon PostgreSQL"