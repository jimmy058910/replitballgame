# Multi-stage build for Cloud Run backend (CRITICAL: Use Debian for Prisma compatibility)
FROM --platform=linux/amd64 node:20-slim AS builder

# Install build dependencies for Debian
RUN apt-get update && apt-get install -y python3 make g++ && rm -rf /var/lib/apt/lists/*

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./
COPY tsconfig*.json ./

# Install ALL dependencies (including dev dependencies for building)
RUN npm ci

# Copy ALL source code for building
COPY server/ ./server/
COPY shared/ ./shared/
COPY prisma/ ./prisma/
COPY client/ ./client/
COPY public/ ./public/
COPY types/ ./types/
COPY vite.config.ts ./
COPY vite.config.production.ts ./
COPY tailwind.config.ts ./
COPY postcss.config.js ./

# DEPLOY #97: Copy minimal server for nuclear debugging
COPY minimal-server.js ./

# Generate Prisma client
RUN npx prisma generate

# Verify Prisma client generation
RUN ls -la generated/prisma/ && echo "✅ Prisma client generated successfully"
RUN test -f generated/prisma/index.js && echo "✅ Prisma index.js exists" || echo "❌ Prisma index.js missing"

# INDUSTRY STANDARD: Compile TypeScript server to JavaScript for production  
RUN rm -rf dist && npm run build:server && npx tsc-alias -p tsconfig.server.json --resolve-full-paths && npm run build

# Verify both frontend and server compilation
RUN ls -la dist/public/ && echo "✅ Frontend compiled successfully"
RUN ls -la dist/server/ && echo "✅ Server compiled to JavaScript successfully"

# Production stage (CRITICAL: Use Debian for Prisma compatibility)
FROM --platform=linux/amd64 node:20-slim AS production

# Set working directory
WORKDIR /app

# Copy dependencies and generated files from builder
COPY --from=builder /app/node_modules ./node_modules
COPY --from=builder /app/generated ./generated
COPY --from=builder /app/package.json ./

# Copy COMPILED JavaScript from builder
COPY --from=builder /app/dist ./dist/

# Copy Prisma client to where server expects it
COPY --from=builder /app/generated ./dist/generated
COPY --from=builder /app/shared/ ./shared/
COPY --from=builder /app/prisma/ ./prisma/

# DEPLOY #98: Copy minimal server for debugging
COPY --from=builder /app/minimal-server.js ./

# DEPLOY #98: PROVEN CLOUD RUN CONFIGURATION
ENV NODE_ENV=production
ENV HOST=0.0.0.0
EXPOSE 8080

# SIMPLIFIED CMD - PROVEN WORKING PATTERN
CMD node minimal-server.js