I did a new branch with Jules. Can you check all changes and implement into our current branch? Please be very thorough, precise, test, and check to avoid troubleshooting and errors later.

Branch name: jules-backend-alignment-pass1

feat: Align backend services with Google Doc specifications

- I've updated store_config.json to match Consolidated Item Database.
- I modified storeRoutes.ts for correct item purchasing (inventory updates) and tiered gem conversion.
- I enhanced seasonRoutes.ts for more accurate dynamic dashboard header content.
- I added a next-league-game endpoint to matchRoutes.ts.
- I updated dynamicMarketplaceService.ts with improved auction duration validation, escrow logic, anti-sniping concepts, and off-season rule considerations.
- I refined injuryStaminaService.ts for differentiated tournament impacts and correct staff recovery bonuses.
- I streamlined playerAgingRetirementService.ts to focus on EoS decline/retirement, and updated dailyPlayerProgressionService.ts for staff modifier accuracy.
- I corrected Universal Value Formula in contractService.ts for staff attributes and player potential.
- I began integration of advanced tactical elements (Field Size, Tactical Focus, Coach Influence, Situational AI) into matchSimulation.ts.
- I updated prisma.schema.prisma with marketplace enhancements and player development tracking tables.

Fix: Align leagueService tests with game_config.json

- I corrected assertions in `leagueService.test.ts` for `generateRandomPlayer` to expect potential values (e.g., `speedPotential`, `overallPotentialStars`, `potentialRating`) in the 2.0-5.0 range, as defined in `game_config.json->playerGeneration.potentialRange`.
- I ensured the player value calculation test in `leagueService.test.ts` uses the correct `ageFactor` based on the existing formula, resulting in an expected value of 16250 for the test case.

Note: `tournamentService.test.ts` continues to fail due to an unresolved `DATABASE_URL` environment issue. This requires manual configuration in your Replit environment (e.g., via secrets).