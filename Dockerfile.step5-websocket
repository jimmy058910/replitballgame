# Step 5: Real-Time Game Features Dockerfile
# Builds on Step 4 by enabling real Realm Rivalry live match simulation

FROM node:20-alpine AS builder

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install all dependencies for building
RUN npm ci --include=dev

# Copy source code
COPY . .

# Build frontend (Vite)
RUN npm run build

# Verify build outputs
RUN echo "✅ Checking build outputs..." && \
    ls -la dist/ && \
    test -f dist/public/index.html && echo "✅ Frontend built successfully" || (echo "❌ Frontend build failed" && exit 1)

# Production stage
FROM node:20-alpine AS production

# Install dumb-init for proper signal handling
RUN apk add --no-cache dumb-init

# Create app user
RUN addgroup -g 1001 -S nodejs && \
    adduser -S appuser -u 1001

# Set working directory
WORKDIR /app

# Copy package files
COPY package*.json ./

# Install production dependencies only
RUN npm ci --only=production && \
    npm cache clean --force

# Copy built application from builder stage
COPY --from=builder /app/dist ./dist
COPY --from=builder /app/server-realtime-step5.js ./

# Copy static assets if they exist (using RUN to handle optional copy)
RUN mkdir -p ./public
COPY --from=builder /app/public ./public

# Verify required files exist
RUN echo "✅ Verifying Step 5 files..." && \
    test -f server-realtime-step5.js && echo "✅ Real-time server exists" || (echo "❌ Real-time server missing" && exit 1) && \
    test -d dist/public && echo "✅ Frontend build exists" || (echo "❌ Frontend build missing" && exit 1) && \
    echo "✅ Step 5 verification complete"

# Change ownership to app user
RUN chown -R appuser:nodejs /app
USER appuser

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD node -e "require('http').get('http://localhost:8080/health', (res) => { \
    process.exit(res.statusCode === 200 ? 0 : 1) \
  }).on('error', () => process.exit(1))"

# Use dumb-init to handle signals properly
ENTRYPOINT ["dumb-init", "--"]

# Start the Step 5 Real-Time Game server
CMD ["node", "server-realtime-step5.js"]